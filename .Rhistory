volatility <-sapply(split(oneday, index(oneday)), v, p=1)
t <- format(as.POSIXct(strptime(names(volatility),"%Y-%m-%d %H:%M:%S")),"%H:%M")
volatility <-.xts(volatility,index = as.POSIXct(t,"%H:%M"))
as.POSIXct(t,"%H:%M")
t[1]
as.Date(t,"%H:%M")
t
as.POSIXlt(t)
as.POSIXlt(t,"%H:%M")
t <- strptime(as.POSIXct(strptime(names(volatility),"%Y-%m-%d %H:%M:%S")),"%H:%M")
t
?strptime
t
t <- format(as.POSIXct(strptime(names(volatility),"%Y-%m-%d %H:%M:%S"))
,"%H:%M")
strptime(t,"%H:%M")
T
t <- format(as.POSIXct(strptime(names(volatility),"%Y-%m-%d %H:%M:%S"))
)
t
t <- format(as.POSIXct(strptime(names(volatility),"%Y-%m-%d %H:%M:%S"))
,"%H:%M")
t
strptime(t,"%H:%M")
oneday<-minRet2["2015-01-06 00:00:00::2015-01-07 00:00:00"]
volatility <-sapply(split(oneday, index(oneday)), v, p=1)
t <- format(as.POSIXct(strptime(names(volatility),"%Y-%m-%d %H:%M:%S")),"%H:%M")
volatility <-.xts(volatility,index = t)
t <- format(as.POSIXct(strptime(names(volatility),"%Y-%m-%d %H:%M:%S")),"%H:%M")
T
t
t <- as.POSIXct(strptime(names(volatility),"%Y-%m-%d %H:%M:%S"))
volatility <-.xts(volatility,index = t)
barplot(volatility)
source('~/Box Sync/articles/high freq/Rscript/1min.R', echo=TRUE)
hourRet <- align.time(Cl(fx.ohlc),n = 60*k)## Create 1-hour bars
#split(minRet2, index(minRet2))
oneday<-hourRet["2015-01-06 00:00:00::2015-01-07 00:00:00"]
volatility <-sapply(split(oneday, index(oneday)), v, p=1)
t <- as.POSIXct(strptime(names(volatility),"%Y-%m-%d %H:%M:%S"))
volatility <-.xts(volatility,index = t)
barplot(volatility)
oneday<-hourRet["2015-01-07 00:00:00::2015-01-08 00:00:00"]
volatility <-sapply(split(oneday, index(oneday)), v, p=1)
t <- as.POSIXct(strptime(names(volatility),"%Y-%m-%d %H:%M:%S"))
volatility <-.xts(volatility,index = t)
barplot(volatility)
head(fx)
k=60
fx.k <- align.time(fx,60*k)## Create 1-minute bars
fx.ohlc <- to.minutes(fx.k[,"Tickreturn"],k = k)
colnames(fx.ohlc) <- c("Open","High","Low","Close")
fx.ohlc <- merge(fx.ohlc[endpoints(fx.ohlc,'minutes')]
,xts( ,seq(start(fx.ohlc),end(fx.ohlc),by="1 mins")))
fx.ohlc[,"Close"] <- na.locf(fx.ohlc[,"Close"])
fx.ohlc[is.na(fx.ohlc[,"Open"]),"Open"] <-
fx.ohlc[is.na(fx.ohlc[,"Open"]),"Close"]
fx.ohlc[is.na(fx.ohlc[,"Low"]),"Low"] <-
fx.ohlc[is.na(fx.ohlc[,"Low"]),"Close"]
fx.ohlc[is.na(fx.ohlc[,"High"]),"High"] <-
fx.ohlc[is.na(fx.ohlc[,"High"]),"Close"]
k=60#1_HOUR
fx.k <- align.time(fx,60*k)## Create 1-minute bars
fx.ohlc <- to.minutes(fx.k[,"Tickreturn"],k = k)
colnames(fx.ohlc) <- c("Open","High","Low","Close")
fx.ohlc <- merge(fx.ohlc[endpoints(fx.ohlc,'minutes')]
,xts( ,seq(start(fx.ohlc),end(fx.ohlc),by="1 mins")))
fx.ohlc[,"Close"] <- na.locf(fx.ohlc[,"Close"])
fx.ohlc[is.na(fx.ohlc[,"Open"]),"Open"] <-
fx.ohlc[is.na(fx.ohlc[,"Open"]),"Close"]
fx.ohlc[is.na(fx.ohlc[,"Low"]),"Low"] <-
fx.ohlc[is.na(fx.ohlc[,"Low"]),"Close"]
fx.ohlc[is.na(fx.ohlc[,"High"]),"High"] <-
fx.ohlc[is.na(fx.ohlc[,"High"]),"Close"]
hourRet <-Cl(fx.ohlc)['2015-01-05 05:00::2015-01-07 13:00',]
v <- function(x,p){
(mean(abs(x)^p))^(1/p)
}
hourRet <-Cl(fx.ohlc)
v <- function(x,p){
(mean(abs(x)^p))^(1/p)
}
#split(minRet2, index(minRet2))
oneday<-hourRet["2015-01-07 00:00:00::2015-01-08 00:00:00"]
volatility <-sapply(split(oneday, index(oneday)), v, p=1)
t <- as.POSIXct(strptime(names(volatility),"%Y-%m-%d %H:%M:%S"))
volatility <-.xts(volatility,index = t)
barplot(volatility)#u shape volatility
oneday<-hourRet["2015-01-06 00:00:00::2015-01-06 00:00:00"]
volatility <-sapply(split(oneday, index(oneday)), v, p=1)
t <- as.POSIXct(strptime(names(volatility),"%Y-%m-%d %H:%M:%S"))
volatility <-.xts(volatility,index = t)
barplot(volatility)#u shape volatility
oneday<-hourRet["2015-01-08 00:00:00::2015-01-08 00:00:00"]
volatility <-sapply(split(oneday, index(oneday)), v, p=1)
t <- as.POSIXct(strptime(names(volatility),"%Y-%m-%d %H:%M:%S"))
volatility <-.xts(volatility,index = t)
barplot(volatility)#u shape volatility
head(volatilit)
head(volatility)
head(hourRet)
head(fx.k[,"Tickreturn"])
head(hourRet["2015-01-08 00:00:00::2015-01-08 00:00:00"])
head(hourRet["2015-01-08 00:00:00::2015-01-08 00:00:00"],5)
hourRet["2015-01-08 00:00:00::2015-01-08 00:00:00"][1:5]
oneday<-hourRet["2015-01-08 00:00:00::2015-01-09 00:00:00"]
volatility <-sapply(split(oneday, index(oneday)), v, p=1)
t <- as.POSIXct(strptime(names(volatility),"%Y-%m-%d %H:%M:%S"))
volatility <-.xts(volatility,index = t)
barplot(volatility)#u shape volatility
hourRet <-Cl(fx.ohlc)
hourRet <- align.time(hourRet,60*60)# CREATE ONE HOUR bars
v <- function(x,p){
(mean(abs(x)^p))^(1/p)
}
oneday<-hourRet["2015-01-08 00:00:00::2015-01-09 00:00:00"]
volatility <-sapply(split(oneday, index(oneday)), v, p=1)
t <- as.POSIXct(strptime(names(volatility),"%Y-%m-%d %H:%M:%S"))
volatility <-.xts(volatility,index = t)
barplot(volatility)#u shape volatility
head(hourRet)
head(hourRet)
k=1#1_min interval
fx.k <- align.time(fx,60*k)## Create 1-minute bars
fx.ohlc <- to.minutes(fx.k[,"Tickreturn"],k = k)
colnames(fx.ohlc) <- c("Open","High","Low","Close")
fx.ohlc <- merge(fx.ohlc[endpoints(fx.ohlc,'minutes')]
,xts( ,seq(start(fx.ohlc),end(fx.ohlc),by="1 mins")))
fx.ohlc[,"Close"] <- na.locf(fx.ohlc[,"Close"])
fx.ohlc[is.na(fx.ohlc[,"Open"]),"Open"] <-
fx.ohlc[is.na(fx.ohlc[,"Open"]),"Close"]
fx.ohlc[is.na(fx.ohlc[,"Low"]),"Low"] <-
fx.ohlc[is.na(fx.ohlc[,"Low"]),"Close"]
fx.ohlc[is.na(fx.ohlc[,"High"]),"High"] <-
fx.ohlc[is.na(fx.ohlc[,"High"]),"Close"]
hourRet <-Cl(fx.ohlc)
head(hourRet)
?align.time
head(fx)
(fx$Tickreturn)[1]
(fx$Tickreturn)[2]
hourRet <- align.time(fx$Tickreturn ,60*60)# CREATE ONE HOUR bars
head(hourRetr)
head(hourRet)
Ret <- align.time(fx$Tickreturn ,60*60)# CREATE ONE HOUR bars
Ret <- align.time(fx$Tickreturn ,60*60)# CREATE ONE HOUR bars
HourRet <-sapply(split(Ret, index(Ret)), sum)
HourRet[1:5]
t <- as.POSIXct(strptime(names(HourRet),"%Y-%m-%d %H:%M:%S"))
volatility <-.xts(HourRet,index = t)
HourRet <-.xts(HourRet,index = t)
HourRet[1:5]
Ret <- align.time(fx$Tickreturn ,60*60)# CREATE ONE HOUR bars
HourRet <-sapply(split(Ret, index(Ret)), sum)
t <- as.POSIXct(strptime(names(HourRet),"%Y-%m-%d %H:%M:%S"))
HourRet <-.xts(HourRet,index = t)
acf(HourRet)
lengh
lengh(HourRet)
length(HourRet)
acf(abs(HourRet))
acf(HourRet^2)
head(HourRet)
HourRet
load("eurusd20151.RData")
range(index(fx))
fxx <- as.data.frame(fx)
fxx$Tickreturn <- c(0,diff(fxx$Mid))#mid price log return
fx <- .xts(fxx,index = index(fx))
head(fx)
k=1
fx.k <- align.time(fx,60*k)## Create 1-minute bars
head(fx)
head(fx.k)
k=1
Ret <- align.time(fx$Tickreturn ,60*k)# CREATE ONE minute bars
minRet <-sapply(split(Ret, index(Ret)), sum)
t <- as.POSIXct(strptime(names(minRet),"%Y-%m-%d %H:%M:%S"))
HourRet <-.xts(HourRet,index = t)
minRet <-.xts(minRet,index = t)
head(index(Ret))
head(minRet)
chartSeries(minRet
,theme=chartTheme("white",bg.col=0)
,name="tick Return")
(a<-acf(minRet,lag.max = 10))#negative autocorrelation
plot(density(minRet))
(a<-acf(minRet,lag.max = 10))#negative autocorrelation
(a<-acf(minRet,lag.max = 20))#negative autocorrelation
sum(split(Ret, index(Ret))[[1]])
minRet[1]
(split(Ret, index(Ret))[[1]])
mean(split(Ret, index(Ret))[[1]])
plot(density(minRet))
skewness(minRet)#should be close to 0
kurtosis(minRet)#should be close to 0
summary(minRet)
Ret <- align.time(fx$Tickreturn ,60*60)# CREATE ONE HOUR bars
HourRet <-sapply(split(Ret, index(Ret)), sum)
t <- as.POSIXct(strptime(names(HourRet),"%Y-%m-%d %H:%M:%S"))
HourRet <-.xts(HourRet,index = t)
acf(abs(HourRet))
acf(HourRet^2)
plot(density(HourRet))
k=1
Ret <- align.time(fx$Tickreturn ,60*k)# CREATE ONE minute bars
minRet <-sapply(split(Ret, index(Ret)), sum)#1min return
t <- as.POSIXct(strptime(names(minRet),"%Y-%m-%d %H:%M:%S"))
minRet <-.xts(minRet,index = t)
head(minRet)
hourRet <- align.time(minRet,60*60)# CREATE ONE HOUR bars
head(hourRet)
v <- function(x,p){
(mean(abs(x)^p))^(1/p)
}
oneday<-hourRet["2015-01-08 00:00:00::2015-01-09 00:00:00"]
hourRet
hourRet["2015-01-08 00:00:00::2015-01-09 00:00:00"]
hourRet["2015-01-08 00:00:00::2015-01-09 01:00:00"]
hourRet[1:5]
hourRet["2015-01-04 18:00:00:2015-01-05 18:00:00"]
hourRet["2015-01-04 18:00:00 :: 2015-01-05 18:00:00"]
hourRet["2015-01-04 18:00:00"]
class(hourRet)
head(hourRet)
head(minRet)
oneday<- hourRet["2015-01-08 00:00:00::"]
oneday<- hourRet["2015-01-05 00:00:00::"]
oneday<- hourRet
volatility <-sapply(split(oneday, index(oneday)), v, p=1)
t <- as.POSIXct(strptime(names(volatility),"%Y-%m-%d %H:%M:%S"))
volatility <-.xts(volatility,index = t)
barplot(volatility)#u shape volatility
k=60
Ret <- align.time(fx$Tickreturn ,60*k)# CREATE ONE HOUR bars
HourRet <-sapply(split(Ret, index(Ret)), sum)
t <- as.POSIXct(strptime(names(HourRet),"%Y-%m-%d %H:%M:%S"))
HourRet <-.xts(HourRet,index = t)
acf(abs(HourRet))
acf(HourRet^2)
barplot(volatility)#u shape volatility
headn
head(fx)
load("../eurusd20151.RData")
source('~/Box Sync/articles/high freq/High_freq_R/basic_stat.R', echo=TRUE)
acf(abs(HourRet))
acf(HourRet^2)
plot(density(minRet))
source('~/Box Sync/articles/high freq/High_freq_R/basic_stat.R', echo=TRUE)
png("basic_Stat/volatility.png",width = 1000)
barplot(volatility)#u shape volatility
dev.off()
png("basic_Stat/volatility.png",width = 2000)
barplot(volatility)#u shape volatility
dev.off()
source('~/Box Sync/articles/high freq/High_freq_R/basic_stat.R', echo=TRUE)
load("../eurusd20151.RData")
suppressMessages(library(quantmod))
#take cl as the previous tick interpolation
fxx <- as.data.frame(fx)
fxx$Tickreturn <- c(0,diff(fxx$Mid))#mid price log return
fx <- .xts(fxx,index = index(fx))
log(2)
load("../eurusd20151.RData")
suppressMessages(library(quantmod))
#take cl as the previous tick interpolation
fxx <- as.data.frame(fx)
fxx$Tickreturn <- c(0,diff(fxx$Mid))#mid price log return
fx <- .xts(fxx,index = index(fx))
####1 min price.ohlc######
#align time
fx$Tickreturn
fx$Tickreturn[1:6]
Ret <- align.time(fx$Tickreturn ,1)# CREATE ONE second bars
Ret[1:4]
index(Ret)[1:3]
distinct(index(Ret))[1:3]
library(dplyr)
distinct(index(Ret))[1:3]
distinct(index(Ret))
index(Ret)[1:10]
tibble()<-as.factor(index(Ret))
t<-as.factor(index(Ret))
levels(t)[1:3]
Ret.stamp<-as.factor(index(Ret)))
Ret.stamp<-as.factor(index(Ret))
?as.factor
Ret.stamp<-as.factor(index(Ret), ordered = TRUE)
Ret.stamp<-as.factor(index(Ret)); ret.stamp.lev <- levels(Ret.stamp)
strptime(ret.stamp.lev)[2]
strptime(ret.stamp.lev)
ret.stamp.lev <- as.POSIXct(strptime(ret.stamp.lev,"%Y-%m-%d %H:%M:%S"))
head(ret.stamp.lev)
for(stamp in ret.stamp.lev){
v(x[paste("::",stamp,sep = "")])
}
for(stamp in ret.stamp.lev){
v(Ret[paste("::",stamp,sep = "")])
}
for(stamp in ret.stamp.lev){
v(Ret[paste("::",stamp,sep = "")]
,p = 1)
}
stamp
ret.stamp.lev
Ret.stamp<-as.factor(index(Ret)); ret.stamp.lev <- levels(Ret.stamp)
v <- function(x,p){
(mean(abs(x)^p))^(1/p)
}
ret.stamp.lev[1]
stamp<-ret.stamp.lev[1]
v(Ret[paste("::",stamp,sep = "")]
,p = 1)
Ret[paste("::",stamp,sep = "")]
stamp
paste("::",stamp,sep = "")
Ret["::2015-01-04 17:00:06"]
head(Ret)
Ret["2015-01-04 17:00:06"]
Ret["2015-01-04"]
class(Ret)
index(Ret)
Ret["2015-01-04"]
Ret <- align.time(fx$Tickreturn ,1)# CREATE ONE second bars
head(Ret)
Ret["2015-01-04"]
Ret["2015-01"]
t <- as.POSIXct(strptime(names(minRet),"%Y-%m-%d %H:%M:%S"))
index(Ret) < t[1]
class(index(Ret))
index(Ret)[1]
t[1]
index(Ret)[1]  < index(Ret)[3]
index(Ret)[9]  < index(Ret)[3]
index(Ret)[9]  < index(Ret)[3]
Ret.stamp<-as.factor(index(Ret)); ret.stamp.lev <- levels(Ret.stamp)
ret.stamp.lev <- as.POSIXct(strptime(ret.stamp.lev,"%Y-%m-%d %H:%M:%S"))
ret.stamp.lev[1]
stamp = ret.stamp.lev[1]
stack(m)
stamp
for(stamp in ret.stamp.lev){
stop("")
}
stamp
index(t)
index(Ret)[1]
index(Ret)[2] < stamp
index(Ret)[1] < stamp
index(Ret)[1] = stamp
index(Ret)[1] > stamp
index(Ret)[3] > stamp
index(Ret)[2] > stamp
index(Ret)[2] < stamp
index(Ret)[1] <= stamp
sapply(ret.stamp.lev, function(stamp){
v(x = Ret[index(Ret) <= stamp]
,p = 1)
} )
cumVolatility<-sapply(ret.stamp.lev, function(stamp){
v(x = Ret[index(Ret) <= stamp]
,p = 1)
} )
ms <- function(x,p){
(sum(abs(x)^p))
}
MS <-sapply(split(Ret, index(Ret)), ms,p=1)
head(MS)
ms <- function(x,p){
c((sum(abs(x)^p)),length(x))
}
MS <-sapply(split(Ret, index(Ret)), ms,p=1)
class(MS)
MS[,1:2]
MS[,1:5]
SS <-MS
MS <- apply(SS, MARGIN = 2, FUN = function(x) return((x[1]/x[2])^(1/p))
,p=1)
1
MS <- apply(SS, MARGIN = 2, FUN = function(x,p=1) return((x[1]/x[2])^(1/p)))
MS[1:3]
0.00047721197781835922/3
SS[1,] <- cumsum(SS[1,])
SS[2,] <- cumsum(SS[2,])
SS[,1:3]
MS <- apply(SS, MARGIN = 2
, FUN = function(x,p=1) return((x[1]/x[2])^(1/p)))
MS[1:4]
plot(MS)
MS[1:10]
m<-lm(log(MS)~1+log(seq(length(MS))))
log(MS)
seq(length(MS))
LOG(seq(length(MS)))
log(seq(length(MS)))
length(log(seq(length(MS))))
length(log(MS))
m <- lm(log(MS)~1+log(seq(length(MS))))
min(MS)
Ret <- align.time(fx$Tickreturn ,1)[-1]# CREATE ONE second bars
ms <- function(x,p){
c((sum(abs(x)^p)),length(x))
}
Ret[,1:4]
Ret[1:4]
Ret <- align.time(fx$Tickreturn ,1)[-1]# CREATE ONE second bars
ms <- function(x,p){
c((sum(abs(x)^p)),length(x))
}
SS <-sapply(split(Ret, index(Ret)), ms,p=1)
SS[1,] <- cumsum(SS[1,])
SS[2,] <- cumsum(SS[2,])
MS <- apply(SS, MARGIN = 2
, FUN = function(x,p=1) return((x[1]/x[2])^(1/p)))
m <- lm(log(MS)~1+log(seq(length(MS))))
m
plot(log(seq(length(MS))),log(MS))
log(3600)
k=1
Ret <- align.time(fx$Tickreturn ,k)# CREATE ONE minute bars
minRet <-sapply(split(Ret, index(Ret)), sum)#1min return
t <- as.POSIXct(strptime(names(minRet),"%Y-%m-%d %H:%M:%S"))
k=1
fx.1 <- align.time(fx,k)## Create 1-minute bars
#create ohlc
?to.minutes
k=1
fx.1 <- align.time(fx,k)## Create 1-minute bars
#create ohlc
fx.ohlc <- to.minutes(fx.1[,"Tickreturn"],k = k)# to an OHLC series
fx.ohlc[1:4]
k=1
fx.1 <- align.time(fx,k)## Create 1-minute bars
head(fx.1)
k=1
fx.1 <- align.time(fx$Tickreturn,k)## Create 1-minute bars
hed(fx.1)
head(fx.1)
fx.1 <- align.time(fx$Tickreturn[-1],k)## Create 1-minute bars
head(fx.1)
library(quantmod)
?Return
?dailyReturn
?periodReturn
?aggregate
aggregate(fx.1,by = index(fx.1),FUN = sum)
ret<-aggregate(fx.1,by = index(fx.1),FUN = sum)
ret[1]
ret[2]
ret[4]
ret[3]
head(fx.1)
head(fx.1,7)
ret[1]
sum(fx.1[1:3])
ret
class(ret)
plot(ret)
sd(ret)
k=2
fx.1 <- align.time(fx$Tickreturn[-1],k)## Create 1-minute bars
ret<-aggregate(fx.1,by = index(fx.1),FUN = sum)
plot(ret)
sd(ret)
getsd<-function(k){
fx.1 <- align.time(fx$Tickreturn[-1],k)## Create 1-minute bars
ret<-aggregate(fx.1,by = index(fx.1),FUN = sum)
(mean(abs(ret)^(p)))^(1/p)
}
vol<-sapply(seq(3600), getsd)
q
vol<-sapply(seq(3600), getsd,p=1)
getsd<-function(k,p){
fx.1 <- align.time(fx$Tickreturn[-1],k)## Create 1-minute bars
ret<-aggregate(fx.1,by = index(fx.1),FUN = sum)
(mean(abs(ret)^(p)))^(1/p)
}
vol<-sapply(seq(3600), getsd,p=1)
getsd<-function(k,p){
fx.1 <- align.time(fx$Tickreturn[-1],k)## Create 1-minute bars
ret<-aggregate(fx.1,by = index(fx.1),FUN = sum)
(mean(abs(ret)^(p)))^(1/p)
}
getsd(1,1)
getsd(2,1)
getsd(4,1)
getsd(10,1)
getsd(3600,1)
getsd(360,1)
getsd(30,1)
vol<-c()
vol<-c()
for(i in seq(60)){
v<-getsd(k = i,p = 1)
vol<-c(vol,v)
}
vol<-c()
for(i in seq(60)){
v<-getsd(k = i,p = 1)
print(i)
vol<-c(vol,v)
}
plot(log(seq(60)),log(vol))
abline(m$coefficients)
(m <- lm(log(vol)~log(seq(60))))
plot(log(seq(60)),log(vol))
abline(m$coefficients)
png("basic_Stat/scale.png",width = 1000)
plot(log(seq(60)),log(vol))
abline(m$coefficients)
dev.off()
source('~/Box Sync/articles/high freq/High_freq_R/scaling laws.R', echo=TRUE)
